/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package me.direcciona.adwords.android;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.TiApplication;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;

import java.util.HashMap;

import com.google.ads.conversiontracking.*;

@Kroll.module(name="Adwordsandroid", id="me.direcciona.adwords.android")
public class AdwordsandroidModule extends KrollModule
{

	// Standard Debugging variables
	private static final String LCAT = "AdwordsandroidModule";
	private static final boolean DBG = TiConfig.LOGD;

	// You can define constants with @Kroll.constant, for example:
	// @Kroll.constant public static final String EXTERNAL_NAME = value;

	public AdwordsandroidModule()
	{
		super();
	}
	
	

	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app)
	{
		Log.d(LCAT, "inside onAppCreate");
		// put module init code that needs to run when the application is created
	}

	// Methods
	@Kroll.method
	public String example()
	{
		Log.d(LCAT, "example called");
		return "hello world";
	}

	// Properties
	@Kroll.getProperty
	public String getExampleProp()
	{
		Log.d(LCAT, "get example property");
		return "hello world";
	}


	@Kroll.setProperty
	public void setExampleProp(String value) {
		Log.d(LCAT, "set example property: " + value);
	}
	
	void checkRequired(KrollDict args, String key) {
        if (!args.containsKey(key)) {
            throw new IllegalArgumentException("`" + key + "` is required");
        }
    }
	
	@Kroll.method
	public void sendRequest(KrollDict args) { 
		
		checkRequired(args,"conversionId");
		checkRequired(args,"label");
        
        String conversionId = args.getString("conversionId");
        String label = args.getString("label");
        String value = args.optString("value", "0");
        boolean isRepeatable = args.optBoolean("isRepeatable", true);
        
			//String conversion_id, String tracking_label, String tracking_value, Boolean repeatable) {
	      // see: https://developers.google.com/app-conversion-tracking/docs/android-conversion-tracking
	    AdWordsConversionReporter.reportWithConversionId(
	    	  TiApplication.getInstance().getCurrentActivity(),
	    	  conversionId,
	    	  label,
	    	  value,
	    	  isRepeatable);
	 }

}

